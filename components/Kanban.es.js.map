{"version":3,"file":"Kanban.es.js","sources":["../../src/components/Kanban.tsx"],"sourcesContent":["import { BoardProps } from \"./types\";\nimport {\n  getColumnChildren,\n  getColumnsFromDataSource,\n} from \"@/utils/columnsUtils\";\nimport { withPrefix } from \"@/utils/getPrefix\";\nimport classNames from \"classnames\";\nimport { Column } from \"./Column\";\nimport { forwardRef, useEffect, useRef } from \"react\";\nimport { autoScroller } from \"@atlaskit/pragmatic-drag-and-drop-react-beautiful-dnd-autoscroll\";\nimport { monitorForElements } from \"@atlaskit/pragmatic-drag-and-drop/element/adapter\";\nimport { combine } from \"@atlaskit/pragmatic-drag-and-drop/combine\";\nimport { autoScrollForElements } from \"@atlaskit/pragmatic-drag-and-drop-auto-scroll/element\";\nimport { KanbanProvider } from \"@/context/KanbanContext\";\nimport mergeRefs from \"@/utils/mergeRefs\";\nimport { handleCardDrop } from \"@/global/dnd/dropManager\";\nimport { getSharedProps } from \"@/utils/getSharedProps\";\nimport ColumnAdder from \"./ColumnAdder\";\n\nconst Kanban = forwardRef<HTMLDivElement, BoardProps>((props, ref) => {\n  const {\n    dataSource,\n    rootStyle = {},\n    rootClassName,\n    onColumnMove,\n    onCardMove,\n    renderColumnWrapper,\n    renderColumnAdder,\n    ...rest\n  } = props;\n\n  const columns = getColumnsFromDataSource(dataSource);\n  const internalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!internalRef.current) return;\n\n    return combine(\n      monitorForElements({\n        onDragStart({ location }) {\n          autoScroller.start({ input: location.current.input });\n        },\n        onDrag({ location }) {\n          autoScroller.updateInput({ input: location.current.input });\n        },\n        onDrop(args) {\n          autoScroller.stop();\n          handleCardDrop({\n            source: {\n              id: (args.source as any).id || \"\",\n              data: args.source.data,\n            },\n            location: {\n              current: {\n                dropTargets: args.location.current.dropTargets,\n              },\n            },\n            columns,\n            dataSource,\n            onCardMove,\n            onColumnMove,\n          });\n        },\n      }),\n      autoScrollForElements({\n        element: internalRef.current,\n        canScroll: () => true,\n        getConfiguration: () => ({\n          maxScrollSpeed: \"standard\",\n        }),\n      }),\n    );\n  }, [columns, dataSource, onCardMove, onColumnMove]);\n\n  const containerClassName = classNames(withPrefix(\"board\"), rootClassName);\n\n  return (\n    <KanbanProvider {...getSharedProps(props)}>\n      <div\n        ref={mergeRefs(ref, internalRef)}\n        className={containerClassName}\n        style={rootStyle}\n      >\n        {columns?.map((column, index) => (\n          <Column\n            key={column.id}\n            index={index}\n            data={column}\n            items={getColumnChildren(column, dataSource)}\n            renderColumnWrapper={renderColumnWrapper}\n            {...rest}\n          />\n        ))}\n        <ColumnAdder renderColumnAdder={renderColumnAdder} />\n      </div>\n    </KanbanProvider>\n  );\n});\n\nexport default Kanban;\n"],"names":["Kanban","forwardRef","props","ref","dataSource","rootStyle","rootClassName","onColumnMove","onCardMove","renderColumnWrapper","renderColumnAdder","rest","columns","getColumnsFromDataSource","internalRef","useRef","useEffect","current","combine","monitorForElements","onDragStart","location","autoScroller","start","input","onDrag","updateInput","onDrop","args","stop","source","id","data","dropTargets","autoScrollForElements","element","canScroll","getConfiguration","maxScrollSpeed","containerClassName","classNames","withPrefix","KanbanProvider","getSharedProps","children","mergeRefs","className","style","map","column","index","Column","items","getColumnChildren","ColumnAdder"],"mappings":";;;;;;;;;;;;;;;AAmBA,MAAMA,SAASC,WAAuC,CAACC,OAAOC,QAAQ;AAC9D,QAAA;AAAA,IACJC;AAAAA,IACAC,YAAY,CAAC;AAAA,IACbC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACA,GAAGC;AAAAA,EACDT,IAAAA;AAEEU,QAAAA,UAAUC,yBAAyBT,UAAU;AAC7CU,QAAAA,cAAcC,OAAuB,IAAI;AAE/CC,YAAU,MAAM;AACd,QAAI,CAACF,YAAYG;AAAS;AAE1B,WAAOC,QACLC,mBAAmB;AAAA,MACjBC,YAAY;AAAA,QAAEC;AAAAA,MAAAA,GAAY;AACxBC,qBAAaC,MAAM;AAAA,UAAEC,OAAOH,SAASJ,QAAQO;AAAAA,QAAAA,CAAO;AAAA,MACtD;AAAA,MACAC,OAAO;AAAA,QAAEJ;AAAAA,MAAAA,GAAY;AACnBC,qBAAaI,YAAY;AAAA,UAAEF,OAAOH,SAASJ,QAAQO;AAAAA,QAAAA,CAAO;AAAA,MAC5D;AAAA,MACAG,OAAOC,MAAM;AACXN,qBAAaO,KAAK;AACH,uBAAA;AAAA,UACbC,QAAQ;AAAA,YACNC,IAAKH,KAAKE,OAAeC,MAAM;AAAA,YAC/BC,MAAMJ,KAAKE,OAAOE;AAAAA,UACpB;AAAA,UACAX,UAAU;AAAA,YACRJ,SAAS;AAAA,cACPgB,aAAaL,KAAKP,SAASJ,QAAQgB;AAAAA,YACrC;AAAA,UACF;AAAA,UACArB;AAAAA,UACAR;AAAAA,UACAI;AAAAA,UACAD;AAAAA,QAAAA,CACD;AAAA,MACH;AAAA,IACD,CAAA,GACD2B,sBAAsB;AAAA,MACpBC,SAASrB,YAAYG;AAAAA,MACrBmB,WAAWA,MAAM;AAAA,MACjBC,kBAAkBA,OAAO;AAAA,QACvBC,gBAAgB;AAAA,MAAA;AAAA,IAEnB,CAAA,CACH;AAAA,KACC,CAAC1B,SAASR,YAAYI,YAAYD,YAAY,CAAC;AAElD,QAAMgC,qBAAqBC,WAAWC,WAAW,OAAO,GAAGnC,aAAa;AAExE,6BACGoC,gBAAc;AAAA,IAAA,GAAKC,eAAezC,KAAK;AAAA,IAAC0C,+BACvC,OAAA;AAAA,MACEzC,KAAK0C,UAAU1C,KAAKW,WAAW;AAAA,MAC/BgC,WAAWP;AAAAA,MACXQ,OAAO1C;AAAAA,MAAUuC,UAEhBhC,CAAAA,mCAASoC,IAAI,CAACC,QAAQC,8BACpBC,QAAM;AAAA,QAELD;AAAAA,QACAlB,MAAMiB;AAAAA,QACNG,OAAOC,kBAAkBJ,QAAQ7C,UAAU;AAAA,QAC3CK;AAAAA,QAAyC,GACrCE;AAAAA,SALCsC,OAAOlB,EAMb,wBAEFuB,aAAW;AAAA,QAAC5C;AAAAA,MAAAA,CAAuC,CAAC;AAAA,IAAA,CAClD;AAAA,EAAA,CACS;AAEpB,CAAC;"}