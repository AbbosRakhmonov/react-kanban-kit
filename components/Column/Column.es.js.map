{"version":3,"file":"Column.es.js","sources":["../../../src/components/Column/Column.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport {\n  BoardItem,\n  BoardProps,\n  ConfigMap,\n  DndState,\n  ScrollEvent,\n} from \"../types\";\nimport { withPrefix } from \"@/utils/getPrefix\";\nimport classNames from \"classnames\";\nimport ColumnHeader from \"../ColumnHeader\";\nimport ColumnContent from \"../ColumnContent\";\nimport { useColumnDnd } from \"@/global/dnd/useColumnDnd\";\n\ninterface Props {\n  index: number;\n  data: BoardItem;\n  configMap: ConfigMap;\n  loadMore?: (columnId: string) => void;\n  onColumnClick?: (\n    e: React.MouseEvent<HTMLDivElement>,\n    column: BoardItem,\n  ) => void;\n  onCardClick?: (e: React.MouseEvent<HTMLDivElement>, card: BoardItem) => void;\n  renderColumnHeader?: (column: BoardItem) => React.ReactNode;\n  renderColumnFooter?: (column: BoardItem) => React.ReactNode;\n  renderSkeletonCard?: BoardProps[\"renderSkeletonCard\"];\n  renderGap?: (column: BoardItem) => React.ReactNode;\n  renderColumnWrapper: (\n    column: BoardItem,\n    {\n      children,\n      className,\n      style,\n      ref,\n    }: {\n      children: React.ReactNode;\n      className?: string;\n      style?: React.CSSProperties;\n      ref?: React.RefObject<HTMLDivElement>;\n    },\n  ) => React.ReactNode;\n  columnWrapperStyle?: (column: BoardItem) => React.CSSProperties;\n  columnHeaderStyle?: (column: BoardItem) => React.CSSProperties;\n  columnStyle?: (column: BoardItem) => React.CSSProperties;\n  columnClassName?: (column: BoardItem) => string;\n  onCardDndStateChange?: (info: DndState) => void;\n  onColumnDndStateChange?: (info: DndState) => void;\n  columnWrapperClassName?: (column: BoardItem) => string;\n  columnHeaderClassName?: (column: BoardItem) => string;\n  columnListContentStyle?: (column: BoardItem) => React.CSSProperties;\n  renderCardDragIndicator?: (card: BoardItem, info: any) => React.ReactNode;\n  renderColumnDragIndicator?: (column: BoardItem, info: any) => React.ReactNode;\n  renderCardDragPreview?: (card: BoardItem, info: any) => React.ReactNode;\n  renderColumnDragPreview?: (column: BoardItem, info: any) => React.ReactNode;\n  columnListContentClassName?: (column: BoardItem) => string;\n  renderListFooter?: (column: BoardItem) => React.ReactNode;\n  renderColumnAdder?: (column: BoardItem) => React.ReactNode;\n  items: BoardItem[];\n  cardWrapperStyle?: (\n    card: BoardItem,\n    column: BoardItem,\n  ) => React.CSSProperties;\n  cardWrapperClassName?: string;\n  onScroll?: (e: ScrollEvent, column: BoardItem) => void;\n}\n\nconst Column = (props: Props) => {\n  const {\n    index,\n    data,\n    items,\n    onColumnClick,\n    renderColumnHeader,\n    renderColumnWrapper,\n    renderColumnFooter,\n    columnWrapperStyle,\n    columnHeaderStyle,\n    onColumnDndStateChange,\n    columnWrapperClassName,\n    columnHeaderClassName,\n    columnListContentClassName,\n    columnClassName,\n    columnStyle,\n    renderColumnAdder,\n    ...rest\n  } = props;\n\n  const {\n    headerRef,\n    outerFullHeightRef,\n    innerRef,\n    state,\n    cardOverShadowCount,\n  } = useColumnDnd(data, index, items, onColumnDndStateChange);\n\n  const containerClassName = classNames(\n    withPrefix(\"column-outer\"),\n    columnWrapperClassName?.(data),\n  );\n\n  const ColumnWrapper = (children: React.ReactNode) =>\n    renderColumnWrapper ? (\n      renderColumnWrapper(data, {\n        children,\n        className: containerClassName,\n        style: columnWrapperStyle?.(data),\n        ref: outerFullHeightRef,\n      })\n    ) : (\n      <div\n        className={containerClassName}\n        ref={outerFullHeightRef}\n        style={columnWrapperStyle?.(data)}\n      >\n        {children}\n      </div>\n    );\n\n  return (\n    <div onClick={(e) => onColumnClick?.(e, data)}>\n      {ColumnWrapper(\n        <div\n          className={classNames(withPrefix(\"column\"), columnClassName?.(data))}\n          ref={innerRef}\n          style={columnStyle?.(data)}\n        >\n          <div className={withPrefix(\"column-wrapper\")}>\n            <ColumnHeader\n              renderColumnHeader={renderColumnHeader}\n              columnHeaderStyle={columnHeaderStyle}\n              columnHeaderClassName={columnHeaderClassName?.(data)}\n              data={data}\n              ref={headerRef}\n            />\n            <ColumnContent\n              items={items}\n              column={data}\n              columnListContentClassName={columnListContentClassName?.(data)}\n              cardOverHeight={\n                cardOverShadowCount ? (state as any).dragging.height : null\n              }\n              cardOverShadowCount={cardOverShadowCount}\n              {...rest}\n            />\n            {renderColumnFooter?.(data)}\n          </div>\n        </div>,\n      )}\n    </div>\n  );\n};\n\nexport default Column;\n"],"names":["Column","props","index","data","items","onColumnClick","renderColumnHeader","renderColumnWrapper","renderColumnFooter","columnWrapperStyle","columnHeaderStyle","onColumnDndStateChange","columnWrapperClassName","columnHeaderClassName","columnListContentClassName","columnClassName","columnStyle","renderColumnAdder","rest","headerRef","outerFullHeightRef","innerRef","state","cardOverShadowCount","useColumnDnd","containerClassName","classNames","withPrefix","ColumnWrapper","children","className","style","ref","_jsx","onClick","e","ColumnHeader","ColumnContent","column","cardOverHeight","dragging","height"],"mappings":";;;;;;AAmEMA,MAAAA,SAASA,CAACC,UAAiB;AACzB,QAAA;AAAA,IACJC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACA,GAAGC;AAAAA,EACDjB,IAAAA;AAEE,QAAA;AAAA,IACJkB;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,EACEC,IAAAA,aAAarB,MAAMD,OAAOE,OAAOO,sBAAsB;AAE3D,QAAMc,qBAAqBC,WACzBC,WAAW,cAAc,GACzBf,iEAAyBT,KAC3B;AAEA,QAAMyB,gBAAgBA,CAACC,aACrBtB,sBACEA,oBAAoBJ,MAAM;AAAA,IACxB0B;AAAAA,IACAC,WAAWL;AAAAA,IACXM,OAAOtB,yDAAqBN;AAAAA,IAC5B6B,KAAKZ;AAAAA,EAAAA,CACN,IAEDa,oBAAA,OAAA;AAAA,IACEH,WAAWL;AAAAA,IACXO,KAAKZ;AAAAA,IACLW,OAAOtB,yDAAqBN;AAAAA,IAAM0B;AAAAA,EAAAA,CAG/B;AAGT,6BACE,OAAA;AAAA,IAAKK,SAAUC,CAAAA,MAAM9B,+CAAgB8B,GAAGhC;AAAAA,IAAM0B,UAC3CD,cACCK,oBAAA,OAAA;AAAA,MACEH,WAAWJ,WAAWC,WAAW,QAAQ,GAAGZ,mDAAkBZ,KAAK;AAAA,MACnE6B,KAAKX;AAAAA,MACLU,OAAOf,2CAAcb;AAAAA,MAAM0B,+BAE3B,OAAA;AAAA,QAAKC,WAAWH,WAAW,gBAAgB;AAAA,QAAEE,UAAA,CAC3CI,oBAACG,cAAY;AAAA,UACX9B;AAAAA,UACAI;AAAAA,UACAG,uBAAuBA,+DAAwBV;AAAAA,UAC/CA;AAAAA,UACA6B,KAAKb;AAAAA,QAAAA,CACN,GACDc,oBAACI,eAAa;AAAA,UACZjC;AAAAA,UACAkC,QAAQnC;AAAAA,UACRW,4BAA4BA,yEAA6BX;AAAAA,UACzDoC,gBACEhB,sBAAuBD,MAAckB,SAASC,SAAS;AAAA,UAEzDlB;AAAAA,UAAyC,GACrCL;AAAAA,QAAAA,CACL,GACAV,yDAAqBL,KAAK;AAAA,MAAA,CACxB;AAAA,IAAA,CACF,CACP;AAAA,EAAA,CACG;AAET;"}